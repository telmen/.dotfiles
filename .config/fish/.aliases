#compdef

# React native

abbr rn 'react-native'
abbr rns 'react-native start'
abbr rna 'react-native run-android'
abbr rni 'react-native run-ios'

# iOS devices

abbr d 'instruments -s devices'

# Android devices

abbr ad 'adb devices'
abbr adnetwork 'adb shell settings put global airplane_mode_on 1 && adb shell settings put global airplane_mode_on 0'

abbr c+x 'chmod +x'

# Shortcuts
abbr g 'git'

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Get macOS Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias iplocal="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Show active network interfaces
alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# JavaScriptCore REPL
set jscbin "/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc"
[ -e "$jscbin" ] && alias jsc="$jscbin";
set -e jscbin

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS
	alias "$method"="lwp-request -m '$method'"
end

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume output volume 100'"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Print each PATH entry on a separate line
alias path='echo -e $PATH/\\n'

abbr ll 'exa --group-directories-first -Bhl'
abbr ls 'exa'
abbr v vim
abbr vip '$EDITOR +PlugInstall +qall'
abbr vup '$EDITOR +PlugUpdate'
abbr vcp '$EDITOR +PlugClean +qall'
abbr fz 'source ~/.config/fish/config.fish'
abbr ff '$EDITOR ~/.config/fish/config.fish'
abbr gg '$EDITOR ~/.gitconfig'
abbr cc '$EDITOR ~/Library/Application\ Support/Code/User/settings.json'
abbr vv '$EDITOR ~/.vimrc'
abbr ali '$EDITOR ~/.config/fish/.aliases'
abbr ex '$EDITOR ~/.config/fish/.exports'
abbr fn '$EDITOR ~/.config/fish/.fns'
abbr cat bat
abbr c 'code .'
abbr copy 'pbcopy'
abbr paste 'pbpaste'
abbr rm 'rm -i'
abbr o 'open .'
abbr b 'open -a "Google Chrome"'

function md
  mkdir -p -- "$argv"
  cd -- "$argv"
end

function dev
  cd "$HOME/dev/$argv"
end

function fork
  cd "$HOME/fork/$argv"
end

function work
  cd "$HOME/work/$argv"
end

function 0x0
  curl -F "file=@$argv" https://0x0.st
end

function ptoi
  sips -s format icns $argv --out $argv.icns
end

function pgb
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
end

function fish_prompt
  set -l branch (pgb)
  if test -z "$branch"
    set branch ""
  else
    set branch " ($branch)"
  end
  set -l dir (basename $PWD)
  echo -sn "▲ "
  echo -sn "$dir"
  echo -sn "$branch: "
end
